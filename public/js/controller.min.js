app.controller('centralizedCtrl', ['$scope', '$http', 'M_API', 'timer',
    function($scope, $http, M_API, timer) {
        $scope.$emit('setMenuActive', 'centralized');

        $scope.searchCentralizedRadar = function() {
            $http.post(M_API.base + M_API.centralizedRadar)
                .success(function(data) {
                    $scope.centralizedRadar = data;
                    timer(function() {
                        $scope.searchCentralizedRadar();
                    }, 10000, 'centralizedList')
                });
        };
        $scope.searchCentralizedRadar();






    }
]);
app.controller('eventCtrl', ['$scope',
    function($scope) {
        $scope.$emit('setMenuActive', 'event');
    }
]);
app.controller('figureCtrl', ['$scope', '$http', 'timer', 'M_API',
    function($scope, $http, timer, M_API) {
        $scope.$emit('setMenuActive', 'figure');
        $scope.HotPeopleListNow = [];
        $scope.HotPeopleNewList = [];
        $scope.index = -1;
        var peopleList = [];
        var maxPage = 0;
        var page = 0;
        var peopleDetail = [];
        var pdIndex = 0;

        searchList();

        function searchList() {
            $http.post(M_API.base + M_API.getHotPeopleListPath)
                .success(function(data) {
                    peopleList = data;
                    maxPage = parseInt(peopleList.length / 8, 10);
                    makeNewList();
                });
        }

        function makeNewList() {
            $scope.HotPeopleListNow = [];
            for (var i = 0 + (8 * page); i < peopleList.length && i < 8 * (page + 1); i++) {
                $scope.HotPeopleListNow.push(peopleList[i]);
            }
            $scope.index = -1;
            searchDetail();
        }


        function searchDetail() {
            if ($scope.index < 7 + (page * 7) &&
                $scope.index < $scope.HotPeopleListNow.length - 1) {

                $scope.index = $scope.index + 1;

                $scope.HotPeopleNewList = [];
                $http.post(M_API.base + M_API.getHotNewListPath, {
                        id: $scope.HotPeopleListNow[$scope.index].id
                    })
                    .success(function(data) {
                        peopleDetail = data;
                        pdIndex = 0;
                        timer(makeDetail, 100, 'figureDetailDelay');
                    });
            } else {
                if (page < maxPage) {
                    page = page + 1;
                } else {
                    page = 0;
                }
                makeNewList();
            }
        }

        function makeDetail() {
            if (pdIndex < peopleDetail.length) {
                $scope.HotPeopleNewList.push(peopleDetail[pdIndex]);
                $scope.$apply();
                pdIndex = pdIndex + 1;
                timer(makeDetail, 100, 'figureDetailDelay');
            } else {
                timer(searchDetail, 10000, 'figureDetail');
            }
        }
    }
]);
app.controller('grabCtrl', ['$scope','$http','timer',
    function($scope,$http,timer) {
        $scope.$emit('setMenuActive', 'grab');

        $http.get('../data/grabList.js').success(function(data){
            $scope.grabList=eval(data);
            //console.log($scope.grabList);
            $scope.lists=[];
        });
        function getMapData(){
            $scope.grab_map_data=[
                {name:'上海',value:GetRandomNum(100,20000)},
                {name:'东莞',value:GetRandomNum(100,20000)},
                {name:'长春',value:GetRandomNum(100,20000)},
                {name:'乌鲁木齐',value:GetRandomNum(100,20000)},
                {name:'青岛',value:GetRandomNum(100,20000)},
                {name:'贵阳',value:GetRandomNum(100,20000)},
                {name:'兰州',value:GetRandomNum(100,20000)},
                {name:'银川',value:GetRandomNum(100,20000)},
                {name:'北京',value:GetRandomNum(100,20000)},
                {name:'合肥',value:GetRandomNum(100,20000)},
                {name:'南京',value:GetRandomNum(100,20000)},
                {name:'南宁',value:GetRandomNum(100,20000)},
                {name:'厦门',value:GetRandomNum(100,20000)},
                {name:'呼和浩特',value:GetRandomNum(100,20000)},
                {name:'哈尔滨',value:GetRandomNum(100,20000)},
                {name:'大连',value:GetRandomNum(100,20000)},
                {name:'天津',value:GetRandomNum(100,20000)},
                {name:'太原',value:GetRandomNum(100,20000)},
                {name:'昆明',value:GetRandomNum(100,20000)},
                {name:'武汉',value:GetRandomNum(100,20000)},
                {name:'沈阳',value:GetRandomNum(100,20000)},
                {name:'海口',value:GetRandomNum(100,20000)},
                {name:'深圳',value:GetRandomNum(100,20000)},
                {name:'西安',value:GetRandomNum(100,20000)},
                {name:'郑州',value:GetRandomNum(100,20000)},
                {name:'重庆',value:GetRandomNum(100,20000)},
                {name:'西宁',value:GetRandomNum(100,20000)},
                {name:'长沙',value:GetRandomNum(100,20000)},
                {name:'广州',value:GetRandomNum(100,20000)},
                {name:'拉萨',value:GetRandomNum(100,20000)}
            ];
            timer(function(){
                getMapData();
            },3600000, 'grabList');
        }
        getMapData();

        function GetRandomNum(Min, Max) {
            var Range = Max - Min;
            var Rand = Math.random();
            return (Min + Math.round(Rand * Range));
        }
    }
]);
app.controller('initWebCtrl', ['$scope', '$timeout', '$state', '$http', 'M_API',
    function($scope, $timeout, $state, $http, M_API) {
        $scope.nowActive = "place";
        $scope.$on('setMenuActive', function(e, name) {
            $scope.nowActive = name;
        });

        var pages = [
            'place',
            'figure',
            'words',
            'speech',
            'centralized',
            'event',
            'grab'
        ];

        // 自动循环页面
        // $interval(function() {
        //     var n = pages.indexOf($scope.nowActive) + 1;
        //     if (n == pages.length) {
        //         n = 0;
        //     }
        //     $state.go('l.' + pages[n]);
        // }, 5000);

        $scope.sumNumber = 0;
        $scope.postSum = 0;
        $scope.replaySum = 0;
        searchWebSum();
        function searchWebSum() {
            $http.post(M_API.base + M_API.webSum)
                .success(function(data) {
                    $scope.sumNumber = data.sum;
                    $scope.postSum = data.post;
                    $scope.replaySum = data.reply;
                    $timeout(searchWebSum, 10000);
                });
        }
    }
]);
app.controller('placeCtrl', ['$scope', '$http', 'M_API',
    function($scope, $http, M_API) {
        $scope.$emit('setMenuActive', 'place');

        $scope.searchDetail = function(id, name) {
            $http.post(M_API.base + M_API.placeDetail, {
                    id: id
                })
                .success(function(data) {
                    var ret = {
                        today: [],
                        yes: [],
                        name: name,
                        cloumn: [],
                        cordon: data.cordon
                    };
                    var hour;
                    for (var i = 0; i < 24; i++) {
                        hour = i + '';
                        if (i < 10) hour = '0' + i;
                        ret.cloumn.push(hour);
                        if (angular.isDefined(data.today.post[hour])) {
                            ret.today.push(data.today.post[hour] + data.today.reply[hour]);
                        }
                        ret.yes.push(data.yes.post[hour] + data.yes.reply[hour]);

                    }
                    $scope.hourDetail = ret;
                });
        };
    }
]);
app.controller('speechCtrl', ['$scope','$http','M_API','timer',
    function($scope,$http,M_API, timer) {
        $scope.$emit('setMenuActive', 'speech');

		//近30天归口趋势
		$scope.searchSpeechPlot = function() {
			$http.post(M_API.base + M_API.speechList)
				.success(function(data) {
					$scope.speechPlot= data;
					timer(function(){
						$scope.searchSpeechPlot();
					},10000, 'speechRecent');
				});
		};
		$scope.searchSpeechPlot();

		//今日昨日归口趋势
		$scope.searchSpeechDate = function() {
			$http.post(M_API.base + M_API.speechDate)
				.success(function(data) {
					$scope.speechDate= data;
					timer(function(){
						$scope.searchSpeechDate();
					},10000,'speechYT');
				});
		};
		$scope.searchSpeechDate();

		//$http.get('../data/speechPlot.js').success(function(data){
		//	var item=eval(data);
		//	var dates=[];//日期
		//	var dateValues=[];//日期对应的值
		//	//求取出数组数据的长度
		//	function getJsonObjLength(jsonObj) {
		//        var Length = 0;
		//        for (var date in jsonObj) {
		//            Length++;
		//        }
		//        return Length;
		//	}
		//	var dataPairLength=getJsonObjLength(item[0].dataPair);
		//
		//	for(var i=0;i<dataPairLength;i++){
		//		dates.push(item[0].dataPair[i].date);
		//	}
		//	var colorList=['#194547','#7fc79a','#f4e5c1','#f93c1a','#f17a65']
	     //   //堆积折线图
        //
	     //   require(
	     //       [
	     //           'echarts',
	     //           'echarts/chart/line'
	     //       ],
	     //       function (ec) {
	     //           var myChart = ec.init(document.getElementById('speech__stackPlot--content'));
	     //           var option = {
		//                    tooltip : {
		//	                    trigger: 'axis',
		//	                    textStyle: {color:'#000000',
		//	                        fontSize:12},
		//	                    borderRadius:'2',
		//	                    borderColor:'#45c9d8',
		//	                    borderWidth:'0',
		//	                    backgroundColor:'rgba(255,255,255,0.85)',
		//	                    axisPointer:{
		//	                        lineStyle:{
		//	                            width:'1',
		//	                            color:'#ffffff'
		//	                        }
		//	                    }
		//					},
		//
		//                    grid:{
		//                    	borderWidth:'0'
		//                    },
		//
		//	                xAxis : [
		//	                    {
		//	                        splitLine:{show:false},
		//	                        axisLine:{
		//	                        	lineStyle:{
		//	                        		color:'#ffffff',
		//	                        		width:'1'
		//	                        	}
		//	                        },
		//	                        type : 'category',
		//	                        boundaryGap : false,
		//	                        axisLabel : {
		//								show : true,
		//								textStyle : {
		//								color : '#ffffff'
		//								}
		//							},
		//	                        data : dates
		//	                    }
		//	                ],
		//
		//	                yAxis : [
		//	                    {
		//	                    	splitLine:{show:false},
		//	                        axisLine:{show:false},
		//							axisLabel : {
		//								show : true,
		//								textStyle : {
		//								color : '#ffffff'
		//								}
		//							},
		//	                        type : 'value'
		//	                    }
		//	                ],
        //
		//	                 series:function(){
		//                	    var serie=[];
		//                	    for(var i=0;i < item.length;i++){
		//                	    	var value1 = item[i].dataPair;
		//                	    	var value2 = [];
		//                	    	for(var j=0;j<dataPairLength;j++){
		//                	    		value2.push(value1[j].value);
		//                	    	}
		//                		    var items={
		//                				name:item[i].type,
		//                				type:'line',
		//                				symbol:'circle',
		//	                			data:value2,
		//                				itemStyle: {normal: {color:colorList[i],lineStyle:{
		//	                        	width:'1'
		//	                        }}}
		//
		//                			}
		//                			serie.push(items);
		//                		  	};
		//                	  return serie;
		//                  }()
	     //           }
	     //           myChart.setOption(option);
	     //       }
	     //   );
        //
        //
        //
  		//});

		//$http.get('../data/speechDate.js').success(function(data){
		//	var temp=eval(data);
		//	var dates=[];//日期
		//	var dateValues=[];//日期对应的值
		//	//求取出数组数据的长度
		//	function getJsonObjLength(jsonObj) {
		//        var Length = 0;
		//        for (var date in jsonObj) {
		//            Length++;
		//        }
		//        return Length;
		//	}
		//	var dataPairLength=getJsonObjLength(temp[0].dataPair);
		//
		//	for(var i=0;i<dataPairLength;i++){
		//		dates.push(temp[0].dataPair[i].date);
		//	}
		//	var colorList=['#1665b3','#424d52'];
        //
		//	//昨日今日对比折线图
		//	require(
	     //       [
	     //           'echarts',
	     //           'echarts/chart/line'
	     //       ],
	     //       function (ec) {
	     //           var myChart = ec.init(document.getElementById('speech__DateBox--content'));
	     //           var option = {
		//                    tooltip : {
		//	                    trigger: 'axis',
		//	                    textStyle: {color:'#000000',
		//	                        fontSize:12},
		//	                    borderRadius:'2',
		//	                    borderColor:'#45c9d8',
		//	                    borderWidth:'0',
		//	                    backgroundColor:'rgba(255,255,255,0.85)',
		//	                    axisPointer:{
		//	                        lineStyle:{
		//	                            width:'1',
		//	                            color:'#ffffff'
		//	                        }
		//	                    }
		//					},
		//
		//                    grid:{
		//                    	borderWidth:'0'
		//                    },
		//
		//	                xAxis : [
		//	                    {
		//	                        splitLine:{show:false},
		//	                        axisLine:{
		//	                        	lineStyle:{
		//	                        		color:'#ffffff',
		//	                        		width:'1'
		//	                        	}
		//	                        },
		//	                        type : 'category',
		//	                        boundaryGap : false,
		//	                        axisLabel : {
		//								show : true,
		//								textStyle : {
		//								color : '#ffffff'
		//								}
		//							},
		//	                        data :dates
		//	                    }
		//	                ],
		//
		//	                yAxis : [
		//	                    {
		//	                    	splitLine:{show:false},
		//	                        axisLine:{show:false},
		//	                        axisLabel : {
		//								show : true,
		//								textStyle : {
		//								color : '#ffffff'
		//								}
		//							},
		//	                        type : 'value'
		//	                    }
		//	                ],
		//	                series:function(){
		//                	    var serie=[];
		//                	    for(var i=0;i < temp.length;i++){
		//                	    	var value1 = temp[i].dataPair;
		//                	    	var value2 = [];
		//                	    	for(var j=0;j<dataPairLength;j++){
		//                	    		value2.push(value1[j].value);
		//                	    	}
		//                		    var items={
		//                				name:temp[i].type,
		//                				type:'line',
		//                				symbol:'circle',
		//	                			data:value2,
		//                				itemStyle: {normal: {color:colorList[i],lineStyle:{
		//	                        	width:'1'
		//	                        }}}
		//
		//                			}
		//                			serie.push(items);
		//                		  	};
		//                	  return serie;
		//                  }()
	     //           }
	     //           myChart.setOption(option);
	     //       }
	     //   );
		//});


	
    }
]);
app.controller('wordsCtrl', ['$scope', '$http', 'M_API', 'timer',
    function($scope, $http, M_API, timer) {
        $scope.$emit('setMenuActive', 'words');

        search();

        function search() {
            $http.post(M_API.base + M_API.wordsList)
                .success(function(data) {
                    $scope.data = data;
                    timer(function() {
                        search();
                    }, 20000, 'wordsList');
                });
        }
    }
]);